on: [push]
name: Build
jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:3.5
    name: Build
    strategy:
      fail-fast: false
      matrix:
        board: [nice_nano_v2]
        shield: [dusk36_left, dusk36_right]
    steps:
      - name: Prepare variables
        id: variables
        run: |
          echo "extra-cmake-args=-DSHIELD=${{ matrix.shield }}" >> $GITHUB_OUTPUT
          echo "artifact-name=${{ matrix.shield }}-${{ matrix.board }}-zmk" >> $GITHUB_OUTPUT
          echo "display-name=${{ matrix.shield }} - ${{ matrix.board }}" >> $GITHUB_OUTPUT
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache west modules
        uses: actions/cache@v4
        env:
          cache-name: cache-zephyr-modules
        with:
          path: |
            zmk/modules/
            zmk/tools/
            zmk/zephyr/
            zmk/bootloader/
            zmk/zmk/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('manifest-dir/west.yml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: West Init
        working-directory: ./zmk
        run: west init -l config
      - name: West Update
        working-directory: ./zmk
        run: west update
      - name: West Zephyr export
        working-directory: ./zmk
        run: west zephyr-export
      - name: West Build (${{ steps.variables.outputs.display-name }})
        working-directory: ./zmk
        run: |
          west build -s zmk/app -b ${{ matrix.board }} -- -DZMK_CONFIG=${PWD}/config ${{ steps.variables.outputs.extra-cmake-args }} ${{ matrix.cmake-args }}
      - name: ${{ steps.variables.outputs.display-name }} DTS File
        if: ${{ always() }}
        working-directory: ./zmk
        run: |
          if [ -f "build/zephyr/${{ matrix.board }}.dts.pre.tmp" ]; then cat -n build/zephyr/${{ matrix.board }}.dts.pre.tmp; fi
          if [ -f "build/zephyr/zephyr.dts" ]; then cat -n build/zephyr/zephyr.dts; fi
      - name: ${{ steps.variables.outputs.display-name }} Kconfig file
        working-directory: ./zmk
        run: cat build/zephyr/.config | grep -v "^#" | grep -v "^$"
      - name: Rename artifacts
        working-directory: ./zmk
        run: |
          mkdir build/artifacts
          if [ -f build/zephyr/zmk.uf2 ]
          then
            cp build/zephyr/zmk.uf2 "build/artifacts/${{ steps.variables.outputs.artifact-name }}.uf2"
          elif [ -f build/zephyr/zmk.hex ]
          then
            cp build/zephyr/zmk.hex "build/artifacts/${{ steps.variables.outputs.artifact-name }}.hex"
          fi
      - name: Archive (${{ steps.variables.outputs.display-name }})
        uses: actions/upload-artifact@v4
        with:
          name: "firmware ${{ steps.variables.outputs.display-name }}"
          path: zmk/build/artifacts
